version: "3.9"
name: agendum
services:
  app_agendum:  # Add web service
    env_file:
      - .env
    container_name: app_agendum
    networks:
      - agendum_network
    build: 
      context: .
      dockerfile: docker/Dockerfile
    image: app_agendum:latest
    ports:
      - "5000:5000"
    environment:
      - CATALYST_DEBUG=1
      - DBIC_TRACE=1
      - SESSION_STORAGE_SECRET=${SESSION_STORAGE_SECRET:-agendum_dev_session_secret}
      - CSRF_SECRET=${CSRF_SECRET:-agendum_dev_csrf_secret}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-agendum_dev_pg_pass}
      - POSTGRES_USER=agendum_dbuser
      - POSTGRES_DB=agendum
      - DB_HOST=db_agendum
      - DB_PORT=5432
    volumes:
      - ".:/app"
    depends_on:
      db_agendum:
        condition: service_healthy 
  db_agendum:  # Add PostgreSQL service
    container_name: db_agendum
    networks:
      - agendum_network
    build:
      context: .
      dockerfile: docker/Dockerfile-psql
    image: db_agendum:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agendum_dbuser -d agendum"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      -  db_agendum_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=agendum_dbuser
      - POSTGRES_DB=agendum
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-agendum_dev_pg_pass}
    ports:
      - "5432:5432" # For Development only
volumes:
  db_agendum_data:
    name: db_agendum_data
  app_agendum_data:
    name: app_agendum_data
networks:
  agendum_network:
    name: agendum_network
