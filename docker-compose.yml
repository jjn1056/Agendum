name: agendum
services:
  app_agendum:  # Add web service
    container_name: app_agendum
    networks:
      - agendum_network
    build: 
      context: .
      dockerfile: docker/Dockerfile
    image: app_agendum:latest
    ports:
      - "5000:5000"
    environment:
      - SESSION_STORAGE_SECRET=${SESSION_STORAGE_SECRET}
      - CSRF_SECRET=${CSRF_SECRET}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - CATME_OAUTH2_CLIENT_ID=${CATME_OAUTH2_CLIENT_ID}
      - CATME_OAUTH2_CLIENT_SECRET=${CATME_OAUTH2_CLIENT_SECRET}
      - CATME_OAUTH2_OPENID_CONF=${CATME_OAUTH2_OPENID_CONF}
      - CATME_OAUTH2_JWKS_URI=${CATME_OAUTH2_JWKS_URI}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_HOST=${DB_HOST}
      - AGENDUM_ENV=${AGENDUM_ENV}
    volumes:
      - ".:/app"
    depends_on:
      db_agendum:
        condition: service_healthy 
  db_agendum:  # Add PostgreSQL service
    container_name: db_agendum
    networks:
      - agendum_network
    build:
      context: .
      dockerfile: docker/Dockerfile-psql
    image: db_agendum:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agendum_dbuser -d agendum"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      -  db_agendum_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432" # For Development only
volumes:
  db_agendum_data:
    name: db_agendum_data
  app_agendum_data:
    name: app_agendum_data
networks:
  agendum_network:
    name: agendum_network
