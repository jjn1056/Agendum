BEGIN;

-- 1. Tasks table
CREATE TABLE tasks (
    task_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    due_date DATE,
    priority INT DEFAULT 1,  -- e.g., 1: low, 2: medium, 3: high
    status VARCHAR(50) DEFAULT 'pending', -- e.g., pending, completed, in-progress
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 2. Comments table (Optional)
CREATE TABLE comments (
    comment_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    task_id INT REFERENCES tasks(task_id) ON DELETE CASCADE,
    content TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 3. Labels table (Optional)
CREATE TABLE labels (
    label_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 4. Task-Labels Many-to-Many relationship (Optional)
CREATE TABLE task_labels (
    task_id INT REFERENCES tasks(task_id) ON DELETE CASCADE,
    label_id INT REFERENCES labels(label_id) ON DELETE CASCADE,
    PRIMARY KEY (task_id, label_id)
);

-- Some starting labels

INSERT INTO labels (name, created_at, updated_at)
VALUES
('Urgent', NOW(), NOW()),
('High Priority', NOW(), NOW()),
('Work', NOW(), NOW()),
('Personal', NOW(), NOW()),
('Health', NOW(), NOW()),
('In Progress', NOW(), NOW()),
('Completed', NOW(), NOW()),
('Follow-up', NOW(), NOW()),
('Deadline', NOW(), NOW()),
('Next Week', NOW(), NOW());

COMMIT;
